"use strict";(self.webpackChunkpromptgineering=self.webpackChunkpromptgineering||[]).push([[1176],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>f});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),c=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},p=function(e){var a=c(e.components);return n.createElement(s.Provider,{value:a},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(t),m=r,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||l;return t?n.createElement(f,o(o({ref:a},p),{},{components:t})):n.createElement(f,o({ref:a},p))}));function f(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=m;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<l;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7667:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>g,contentTitle:()=>m,default:()=>L,frontMatter:()=>d,metadata:()=>f,toc:()=>k});var n=t(87462),r=(t(67294),t(3905));const l=t.p+"assets/images/mrkl_task-1c49ad5b95a103a61a1a09323675d9b2.webp",o=t.p+"assets/images/dataset-88e1813bfa8d586a159e2c9032c0f2a2.webp",i=t.p+"assets/images/load_dataset-415700ff19804d1e387bf3ebaf9c0af4.webp",s=t.p+"assets/images/model-a685c56be44600a60767adb710c6c430.webp",c=t.p+"assets/images/extract-bd0bfa308aa57625dc73a6e6467023f1.webp",p=t.p+"assets/images/search-9df707812e09d8b6a51a94ab2cdd2a1c.webp",u=t.p+"assets/images/final-67fa70546790171e13cbdd86dc886039.webp",d={sidebar_position:2},m="\ud83d\udfe1 LLMs Utilizando Herramientas",f={unversionedId:"advanced_applications/mrkl",id:"advanced_applications/mrkl",title:"\ud83d\udfe1 LLMs Utilizando Herramientas",description:'MRKL Systems (@karpas2022mrkl) (Modular Reasoning, Knowledge and Language, siguiendo una l\xf3gica fon\xe9tica inglesa, se prouncia "miracle") son una arquitectura neuro-simb\xf3lica que combina LLMs (computaci\xf3n neuronal) y herramientas externas como calculadoras (computaci\xf3n simb\xf3lica) para resolver problemas complejos.',source:"@site/i18n/es/docusaurus-plugin-content-docs/current/advanced_applications/mrkl.md",sourceDirName:"advanced_applications",slug:"/advanced_applications/mrkl",permalink:"/es/docs/advanced_applications/mrkl",draft:!1,editUrl:"https://github.com/trigaten/promptgineering/tree/v1.2.3/docs/advanced_applications/mrkl.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introducci\xf3n",permalink:"/es/docs/advanced_applications/overview"},next:{title:"\ud83d\udfe1 LLMs que razonan y act\xfaan",permalink:"/es/docs/advanced_applications/react"}},g={},k=[{value:"Un Ejemplo",id:"un-ejemplo",level:2},{value:"Notas",id:"notas",level:2},{value:"M\xe1s",id:"m\xe1s",level:2}],b=(y="LazyLoadImage",function(e){return console.warn("Component "+y+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var y;const h={toc:k},v="wrapper";function L(e){let{components:a,...t}=e;return(0,r.kt)(v,(0,n.Z)({},h,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-llms-utilizando-herramientas"},"\ud83d\udfe1 LLMs Utilizando Herramientas"),(0,r.kt)("p",null,"MRKL Systems",(0,r.kt)("sup",{parentName:"p",id:"fnref-1"},(0,r.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),' (Modular Reasoning, Knowledge and Language, siguiendo una l\xf3gica fon\xe9tica inglesa, se prouncia "miracle") son una ',(0,r.kt)("strong",{parentName:"p"},"arquitectura neuro-simb\xf3lica")," que combina LLMs (computaci\xf3n neuronal) y herramientas externas como calculadoras (computaci\xf3n simb\xf3lica) para resolver problemas complejos."),(0,r.kt)("p",null,'Un sistema MRKL est\xe1 compuesto por un conjunto de m\xf3dulos (por ejemplo, una calculadora, una API del clima, una base de datos, etc.) y un enrutador que decide c\xf3mo "enrutar" las consultas en lenguaje natural entrantes al m\xf3dulo apropiado.'),(0,r.kt)("p",null,'Un ejemplo simple de un sistema MRKL es un LLM que puede usar una aplicaci\xf3n de calculadora. Este es un sistema de un solo m\xf3dulo, donde el LLM es el enrutador. Cuando se le pregunta: "\xbfCu\xe1l es el resultado de 100*100?", el LLM puede elegir extraer los n\xfameros de la consulta y luego decirle al sistema MRKL que use una aplicaci\xf3n de calculadora para calcular el resultado. Esto podr\xeda verse as\xed:'),(0,r.kt)("pre",null,(0,r.kt)("p",null,"\xbfCu\xe1l es el resultado de 100*100?"),(0,r.kt)("span",{className:"bluegreen-highlight"},"CALCULADORA[100*100]")),(0,r.kt)("p",null,'El sistema MRKL ver\xeda la palabra "CALCULADORA" e insertar\xeda "100*100" en la aplicaci\xf3n de calculadora. Esta idea simple se puede expandir f\xe1cilmente a varias herramientas de computaci\xf3n simb\xf3lica.'),(0,r.kt)("p",null,"Considere los siguientes ejemplos adicionales de aplicaciones:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Un chatbot que puede responder preguntas sobre una base de datos financiera extrayendo informaci\xf3n para formar una consulta SQL a partir del texto del usuario.")),(0,r.kt)("pre",null,(0,r.kt)("p",null,"\xbfCu\xe1l es el precio de las acciones de Apple ahora?"),(0,r.kt)("span",{className:"bluegreen-highlight"},'El precio actual es BASE DE DATOS [SELECCIONAR precio DE acciones DONDE empresa = "Apple" Y tiempo = "ahora"].')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Un chatbot que puede responder preguntas sobre el clima extrayendo informaci\xf3n de la consulta y utilizando una API del clima para recuperar la informaci\xf3n.")),(0,r.kt)("pre",null,(0,r.kt)("p",null,"\xbfC\xf3mo est\xe1 el clima en Nueva York?"),(0,r.kt)("span",{className:"bluegreen-highlight"},"El clima es API DEL CLIMA[Nueva York].")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"O incluso tareas mucho m\xe1s complejas que dependen de m\xfaltiples fuentes de datos, como las siguientes:")),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:l,style:{width:"500px"}})),(0,r.kt)("div",{style:{textAlign:"center"}},"Ejemplo de Sistema MRKL (AI21)"),(0,r.kt)("h2",{id:"un-ejemplo"},"Un Ejemplo"),(0,r.kt)("p",null,"He reproducido un ejemplo del sistema MRKL del art\xedculo original, utilizando Dust.tt, vinculado ",(0,r.kt)("a",{parentName:"p",href:"https://dust.tt/trigaten/a/98bdd65cb7"},"aqu\xed"),". El sistema lee un problema matem\xe1tico (por ejemplo, ",(0,r.kt)("inlineCode",{parentName:"p"},"\xbfCu\xe1nto es 20 por 5^6?"),"), extrae los n\xfameros y las operaciones, y los reformatea para una aplicaci\xf3n de calculadora (por ejemplo, ",(0,r.kt)("inlineCode",{parentName:"p"},"20*5^6"),"). Luego env\xeda la ecuaci\xf3n reformateada a la aplicaci\xf3n de calculadora de Google y devuelve el resultado. Tenga en cuenta que el art\xedculo original realiza una optimizaci\xf3n r\xe1pida en el enrutador (el LLM), pero no lo hago en este ejemplo. Veamos c\xf3mo funciona esto:"),(0,r.kt)("p",null,"Primero, hice un conjunto de datos simple en la pesta\xf1a ",(0,r.kt)("inlineCode",{parentName:"p"},"Datasets")," de Dust."),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)(b,{src:o,style:{width:"750px"},mdxType:"LazyLoadImage"})),(0,r.kt)("p",null,"Luego, cambi\xe9 a la pesta\xf1a ",(0,r.kt)("inlineCode",{parentName:"p"},"Specification")," y cargu\xe9 el conjunto de datos utilizando un bloque ",(0,r.kt)("inlineCode",{parentName:"p"},"data"),"."),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)(b,{src:i,style:{width:"750px"},mdxType:"LazyLoadImage"})),(0,r.kt)("p",null,"A continuaci\xf3n, cre\xe9 un bloque ",(0,r.kt)("inlineCode",{parentName:"p"},"llm")," que extrae los n\xfameros y operaciones. Observe c\xf3mo en el prompt le dije que estar\xedamos usando la calculadora de Google. El modelo que uso (GPT-3) probablemente tiene alg\xfan conocimiento de la calculadora de Google desde el preentrenamiento."),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)(b,{src:s,style:{width:"750px"},mdxType:"LazyLoadImage"})),(0,r.kt)("p",null,"Luego, hice un bloque ",(0,r.kt)("inlineCode",{parentName:"p"},"code"),", que ejecuta un c\xf3digo JavaScript simple para eliminar los espacios de la finalizaci\xf3n."),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)(b,{src:c,style:{width:"750px"},mdxType:"LazyLoadImage"})),(0,r.kt)("p",null,"Finalmente, hice un bloque ",(0,r.kt)("inlineCode",{parentName:"p"},"search")," que env\xeda la ecuaci\xf3n reformateada a la calculadora de Google."),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)(b,{src:p,style:{width:"750px"},mdxType:"LazyLoadImage"})),(0,r.kt)("p",null,"\xa1A continuaci\xf3n, podemos ver los resultados finales, que son todos correctos!"),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)(b,{src:u,style:{width:"750px"},mdxType:"LazyLoadImage"})),(0,r.kt)("p",null,"Si\xe9ntase libre de clonar y experimentar con este playground ",(0,r.kt)("a",{parentName:"p",href:"https://dust.tt/trigaten/a/98bdd65cb7"},"aqu\xed"),"."),(0,r.kt)("h2",{id:"notas"},"Notas"),(0,r.kt)("p",null,"MRKL fue desarrollado por ",(0,r.kt)("a",{parentName:"p",href:"https://www.ai21.com/"},"AI21")," y originalmente utiliz\xf3 su LLM J-1 (Jurassic 1)",(0,r.kt)("sup",{parentName:"p",id:"fnref-2"},(0,r.kt)("a",{parentName:"sup",href:"#fn-2",className:"footnote-ref"},"2")),"."),(0,r.kt)("h2",{id:"m\xe1s"},"M\xe1s"),(0,r.kt)("p",null,"Vea ",(0,r.kt)("a",{parentName:"p",href:"https://langchain.readthedocs.io/en/latest/modules/agents/implementations/mrkl.html"},"este ejemplo")," de un sistema MRKL construido con LangChain."),(0,r.kt)("div",{className:"footnotes"},(0,r.kt)("hr",{parentName:"div"}),(0,r.kt)("ol",{parentName:"div"},(0,r.kt)("li",{parentName:"ol",id:"fn-1"},"Karpas, E., Abend, O., Belinkov, Y., Lenz, B., Lieber, O., Ratner, N., Shoham, Y., Bata, H., Levine, Y., Leyton-Brown, K., Muhlgay, D., Rozen, N., Schwartz, E., Shachaf, G., Shalev-Shwartz, S., Shashua, A., & Tenenholtz, M. (2022).\n",(0,r.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")),(0,r.kt)("li",{parentName:"ol",id:"fn-2"},"Lieber, O., Sharir, O., Lentz, B., & Shoham, Y. (2021). Jurassic-1: Technical Details and Evaluation, White paper, AI21 Labs, 2021. URL: Https://Uploads-Ssl. Webflow. Com/60fd4503684b466578c0d307/61138924626a6981ee09caf6_jurassic_ Tech_paper. Pdf.\n",(0,r.kt)("a",{parentName:"li",href:"#fnref-2",className:"footnote-backref"},"\u21a9")))))}L.isMDXComponent=!0}}]);