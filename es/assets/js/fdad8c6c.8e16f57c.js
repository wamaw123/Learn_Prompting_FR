"use strict";(self.webpackChunkpromptgineering=self.webpackChunkpromptgineering||[]).push([[3143],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=p(r),m=o,f=l["".concat(c,".").concat(m)]||l[m]||d[m]||a;return r?n.createElement(f,s(s({ref:t},u),{},{components:r})):n.createElement(f,s({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[l]="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},93153:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var n=r(87462),o=(r(67294),r(3905));const a=r.p+"assets/images/dust-2d613495f6ed482e50d5f6a3e0589477.webp",s={sidebar_position:3},i="Dust",c={unversionedId:"tooling/IDEs/dust",id:"tooling/IDEs/dust",title:"Dust",description:"Dust es una herramienta de ingenier\xeda de prompts construida para encadenar prompts juntos. Proporcionan",source:"@site/i18n/es/docusaurus-plugin-content-docs/current/tooling/IDEs/dust.md",sourceDirName:"tooling/IDEs",slug:"/tooling/IDEs/dust",permalink:"/es/docs/tooling/IDEs/dust",draft:!1,editUrl:"https://github.com/trigaten/promptgineering/tree/v1.2.3/docs/tooling/IDEs/dust.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"GPT-3 Playground",permalink:"/es/docs/tooling/IDEs/playground"},next:{title:"Soaked",permalink:"/es/docs/tooling/IDEs/soaked"}},p={},u=[{value:"Caracter\xedsticas",id:"caracter\xedsticas",level:2},{value:"Notas",id:"notas",level:2}],l={toc:u},d="wrapper";function m(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dust"},"Dust"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://dust.tt/"},"Dust")," es una herramienta de ingenier\xeda de prompts construida para encadenar prompts juntos. Proporcionan\nuna interfaz web para escribir prompts y encadenarlos."),(0,o.kt)("p",null,"Actualmente, tiene una curva de aprendizaje pronunciada en comparaci\xf3n con otras IDEs de ingenier\xeda de prompts."),(0,o.kt)("div",{style:{textAlign:"center"}},(0,o.kt)("img",{src:a,style:{width:"750px"}})),(0,o.kt)("h2",{id:"caracter\xedsticas"},"Caracter\xedsticas"),(0,o.kt)("p",null,'Dust proporciona herramientas robustas en forma de varios "bloques" componibles, para funciones como consultas de LLM, fragmentos de c\xf3digo y b\xfasquedas en Internet. Dust tambi\xe9n admite el uso de conjuntos de datos y pruebas autom\xe1ticas de prompts contra conjuntos de datos.'),(0,o.kt)("p",null,"La funcionalidad actual de Dust se centra en encadenar prompts en lugar de iterar en un solo prompt."),(0,o.kt)("p",null,"Dust admite m\xfaltiples proveedores de modelos: (OpenAI, Cohere), y tiene previsto admitir HuggingFace y Replicate. Se requieren claves de API para todos los proveedores."),(0,o.kt)("p",null,"Puedes implementar aplicaciones de LLM construidas en Dust."),(0,o.kt)("h2",{id:"notas"},"Notas"),(0,o.kt)("p",null,"Dust ha alcanzado recientemente los 1,000 usuarios activos."))}m.isMDXComponent=!0}}]);